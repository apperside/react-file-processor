{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBqB,aAAa;YAAb,aAAa;;WAAb,aAAa;0BAAb,aAAa;;kEAAb,aAAa;;;eAAb,aAAa;;wCACZ;AAClB,UAAI,CAAC,qBAAqB,GAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/D,YAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AAChE,YAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAC1D,YAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;KACpE;;;2CACsB;AACrB,YAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAC5D,YAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAC7D,YAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;KAChE;;;iCACY;AACX,UAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;KAC9B;;;mCACc,CAAC,EAAE;AAChB,OAAC,CAAC,eAAe,EAAE,CAAC;AACpB,OAAC,CAAC,cAAc,EAAE,CAAC;KACpB;;;qCACgB,CAAC,EAAE;;AAElB,UAAI,CAAC,cAAc,CAAC,CAAC,CAAC;;;AAAC,AAGvB,UAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,YAAY,CAAC,KAAK;;;AAAC,AAGxD,UAAI,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,UAAU,EAAE;AACjD,YAAM,KAAK,GAAG,EAAE,CAAC;AACjB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,eAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;AACD,YAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;OACnC;KACF;;;6BACQ;AACP,aACE;;UAAK,SAAS,EAAC,gBAAgB;QAC7B;AACE,cAAI,EAAC,MAAM;AACX,aAAG,EAAC,YAAY;AAChB,eAAK,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,AAAC;AACzB,kBAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,AAAC;AAC9B,kBAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;UAC3C;QACD,IAAI,CAAC,KAAK,CAAC,QAAQ;OAChB,CACN;KACH;;;SAhDkB,aAAa;UAhBlB,SAAS;;kBAgBJ,aAAa;;AAmDlC,aAAa,CAAC,YAAY,GAAG;AAC3B,cAAY,EAAE,wBAAY,EAAE;AAC5B,UAAQ,EAAE,KAAK;CAChB,CAAC","file":"index.js","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * A React component that adds drag-and-drop functionality to the\n * window the component resides in.  It also exposes a chooseFile()\n * function that will trigger the browsers choose local file functionality\n * from an <input type=\"file\" />\n * @class FileProcessor\n * @extends React.Component\n * @example\n * const self = this;\n * <FileProcessor ref=\"myFileProcessor\" onFileSelect={(e, files) => {\n *   console.log(e, files);\n * }} />\n * <Button onClick={()=>{self.refs.myFileProcessor.chooseFile();}}>Open</Button>\n */\nexport default class FileProcessor extends Component {\n  componentDidMount() {\n    this.boundHandleFileSelect =  this.handleFileSelect.bind(this);\n    window.addEventListener('dragover', this.handleFileDrag, false);\n    window.addEventListener('dragleave', this.handleFileDrag);\n    window.addEventListener('drop', this.boundHandleFileSelect, false);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('dragover', this.handleFileDrag);\n    window.removeEventListener('dragleave', this.handleFileDrag);\n    window.removeEventListener('drop', this.boundHandleFileSelect);\n  }\n  chooseFile() {\n    this.refs.fileButton.click();\n  }\n  handleFileDrag(e) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  handleFileSelect(e) {\n    // cancel event\n    this.handleFileDrag(e);\n\n    // fetch FileList object\n    const fileList = e.target.files || e.dataTransfer.files;\n\n    // call onFileSelect\n    if (typeof this.props.onFileSelect === 'function') {\n      const files = [];\n      for (let i = 0; i < fileList.length; i++) {\n        files.push(fileList[i]);\n      }\n      this.props.onFileSelect(e, files);\n    }\n  }\n  render() {\n    return (\n      <div className=\"file-processor\">\n        <input\n          type=\"file\"\n          ref=\"fileButton\"\n          style={{display: 'none'}}\n          multiple={this.props.multiple}\n          onChange={this.handleFileSelect.bind(this)}\n        />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nFileProcessor.defaultProps = {\n  onFileSelect: function () {},\n  multiple: false\n};\n"],"sourceRoot":"/source/"}